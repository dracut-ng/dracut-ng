---
# Containers that takes longer to build or mainline, development, non-stable
# version of CI containers
name: Container (extra)

on:  # yamllint disable-line rule:truthy
    schedule:
        - cron: '30 11 * * *'   # every day at 11:30 UTC
    push:
        branches: [main]
        paths:
            - 'test/container/**'
            - '.github/workflows/container-extra.yml'
    pull_request:
        branches: [main]
        paths:
            - 'test/container/**'
            - '.github/workflows/container-extra.yml'
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

permissions:
    packages: write
    contents: read

jobs:
    amd64:
        if: github.repository == 'dracut-ng/dracut-ng' || vars.CONTAINER == 'enabled'
        name: ${{ matrix.config.tag }} on ${{ matrix.architecture.platform }}
        runs-on: ${{ matrix.architecture.runner }}
        concurrency:
            group: amd64-${{ github.workflow }}-${{ github.ref }}-${{ matrix.config.tag }}-${{ matrix.architecture.platform }}
            cancel-in-progress: true
        strategy:
            fail-fast: false
            matrix:
                architecture:
                    - {platform: 'linux/amd64', runner: 'ubuntu-24.04', tag: 'amd'}
                    - {platform: 'linux/arm64', runner: 'ubuntu-24.04-arm', tag: 'arm'}
                config:
                    - {dockerfile: 'Dockerfile-debian', tag: 'debian:sid'}
                    - {dockerfile: 'Dockerfile-debian', tag: 'ubuntu:devel'}
                    - {dockerfile: 'Dockerfile-debian', tag: 'ubuntu:rolling'}
                    - {dockerfile: 'Dockerfile-alpine', tag: 'alpine:edge'}
                    - {dockerfile: 'Dockerfile-gentoo', tag: 'gentoo:latest', option: 'systemd'}
                    - {dockerfile: 'Dockerfile-gentoo', tag: 'gentoo:amd64-openrc', option: 'amd64-openrc'}
                    - {dockerfile: 'Dockerfile-fedora', tag: 'fedora:rawhide', registry: 'registry.fedoraproject.org'}
                    - {dockerfile: 'Dockerfile-fedora', tag: 'centos:stream10-development', registry: 'quay.io/centos'}
                exclude:
                   - config: {tag: 'alpine:edge'}
                     architecture: {platform: 'linux/arm64'}
                   - config: {tag: 'arch:latest'}
                     architecture: {platform: 'linux/arm64'}
                   - config: {tag: 'gentoo:amd64-openrc'}
                     architecture: {platform: 'linux/arm64'}
        steps:
            - name: Check out the repo
              uses: actions/checkout@v4
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Set up env
              run: echo "repository_owner=${GITHUB_REPOSITORY_OWNER,,}" >>${GITHUB_ENV}
            - name: Build and Push Container
              uses: docker/build-push-action@v6
              with:
                  file: test/container/${{ matrix.config.dockerfile }}
                  tags: ghcr.io/${{env.repository_owner}}/${{ matrix.config.tag }}-${{ matrix.architecture.tag }}
                  push: ${{ github.event_name == 'push' ||  github.event_name == 'schedule' }}
                  platforms: ${{ matrix.architecture.platform }}
                  build-args: |
                      DISTRIBUTION=${{ matrix.config.tag }}
                      REGISTRY=${{ matrix.config.registry }}
                      OPTION=${{ matrix.config.option }}
